@model IEnumerable<IDocument>

@{
    foreach (IDocument post in Model)
    {
        string lead = post.String(BlogKeys.Lead);
        var Tags = post.Get<string[]>(BlogKeys.Tags);
        
        <div class="post-list">
            <a href="@Context.GetLink(post)">
                <h3 class="post-title">@post.WithoutSettings.String(BlogKeys.Title)</h3>
                @if(!string.IsNullOrWhiteSpace(lead))
                {
                    <h4 class="post-subtitle">@lead</h4>
                }
            </a>
            <p class="post-meta">Posted on 
                @(post.Get<DateTime>(BlogKeys.Published).ToLongDateString(Context))
                @if (Tags != null && Tags.Any())
                {
                    @Html.Raw("in")
                    int tagNumber = 1;
                    @foreach (string tag in Tags.OrderBy(x => x))
                    {
                        IDocument tagDocument = Documents[Blog.Tags].FirstOrDefault(x => x.String(BlogKeys.Tag) == tag && x.Get<int>(Keys.CurrentPage) == 1);
                        if(tagDocument != null)
                        {                
                            <a role="button" href="@Context.GetLink(tagDocument)">@tag</a>
                            if (tagNumber < Tags.Count())
                            {
                                <span>,</span>
                            }
                        }
                        tagNumber++;
                    }     
                } 
            </p>      
            @if(Context.Bool(BlogKeys.ArchiveExcerpts))
            {
                @Html.Raw(post.String(BlogKeys.Excerpt))
            }
        </div>   
    }
}